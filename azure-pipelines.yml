# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

jobs:
- job: build
  strategy:
    matrix:
      linux:
        imageName: "ubuntu-18.04"
        flags: ""
      mac:
        imageName: "macos-10.13"
        flags: "NOSTATIC=1"
      windows:
        imageName: "vs2017-win2016"
        flags: ""
    maxParallel: 3

  pool:
    vmImage: $(imageName)

  steps:
  - script: cinst msys2 --params "/InstallDir=C:/msys64" --no-progress
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: install msys2

  - script: C:\msys64\usr\bin\bash --login -c "pacman -S --noconfirm mingw-w64-i686-gcc mingw-w64-i686-make"
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: install MinGW-w64-gcc, make

  - script: C:\msys64\usr\bin\bash --login -c "mingw32-make"
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: mingw32-make
    env:
      MSYSTEM: MINGW32
      HOME: $(Build.SourcesDirectory)

  - script: |
      make $(flags)
    displayName: 'make'
    condition: ne( variables['Agent.OS'], 'Windows_NT')

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        lfs-tool
        lfs-tool.exe
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'

- job: publish
  dependsOn: build
  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
  - task: GitHubRelease@1
    inputs:
      gitHubConnection: lfs-tool
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'gitTag'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'


